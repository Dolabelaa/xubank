# Xubank

Um sistema bancário modular desenvolvido em **Java** para a disciplina de **Programação Modular** na PUC Minas. O projeto simula operações de um banco digital, permitindo o gerenciamento de clientes, contas, transações e relatórios.

---

## 📌 Funcionalidades

* **Gerenciamento de Clientes**

  * Cadastro, edição, listagem e exclusão de clientes.
* **Gerenciamento de Contas**

  * Suporte a diferentes tipos de conta:

    * Conta Corrente
    * Conta Poupança
    * Conta de Investimento
    * Conta de Renda Fixa
* **Transações Bancárias**

  * Depósitos, saques e transferências entre contas.
* **Relatórios**

  * Geração de relatórios sobre contas, clientes e movimentações.
* **Sistema de Login**

  * Controle de acesso baseado em autenticação.
* **Validações e Formatações**

  * Entradas de dados validadas e formatadas para maior confiabilidade.

---

## 🏗️ Arquitetura do Projeto

O projeto segue uma estrutura modular organizada:

```bash
xubank/
├── src/
│   ├── controller/      # Controladores da aplicação
│   ├── model/           # Modelos das entidades
│   ├── util/            # Classes utilitárias
│   ├── test/            # Testes unitários
│   └── Main.java        # Classe principal
```

* **Controller** → Responsável pela lógica de negócio e interação entre modelos e visão.
* **Model** → Representa as entidades do sistema (Cliente, Conta, Transação, etc.).
* **Util** → Contém classes auxiliares, como validadores e formatadores.
* **Test** → Testes unitários para garantir a qualidade do código.

---

## 🚀 Tecnologias Utilizadas

* **Java 17**
* **JUnit** para testes unitários
* Programação Orientada a Objetos (POO)
* Conceitos de modularização

---

## 📦 Como Executar o Projeto

### Pré-requisitos

* **Java JDK 17** ou superior
* **IDE** recomendada: IntelliJ IDEA ou Eclipse

### Passos para execução

```bash
# Clone o repositório
git clone https://github.com/seuusuario/xubank.git

# Acesse o diretório do projeto
cd xubank

# Compile o projeto
javac -d bin src/**/*.java

# Execute a aplicação
java -cp bin Main
```

---

## 🧪 Testes

O projeto possui testes unitários implementados com **JUnit**. Para executá-los:

```bash
# Execute os testes
mvn test
```

---

## 👨‍💻 Autor

**Lucas Gonçalves Dolabela**
Disciplina: Programação Modular — PUC Minas
Ano/Semestre: 2025/1
