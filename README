🏦 Xubank
Um sistema bancário modular desenvolvido em Java para a disciplina de Programação Modular na PUC Minas. O projeto simula operações de um banco digital, permitindo o gerenciamento de clientes, contas, transações e relatórios.

Este projeto está sendo desenvolvido com a linguagem Java 17, no momento encontra-se em andamento e é distribuído sob a licença MIT.

✨ Funcionalidades
👤 Gerenciamento de Clientes
Realiza o cadastro, a edição, a listagem e a exclusão de clientes.

💳 Gerenciamento de Contas
Oferece suporte a diferentes tipos de conta, como Conta Corrente, Conta Poupança, Conta de Investimento e Conta de Renda Fixa.

💸 Transações Bancárias
Permite a realização de depósitos, saques e transferências entre contas.

📊 Relatórios
É capaz de gerar relatórios sobre as contas, os clientes e suas movimentações.

🔐 Sistema de Login
Possui um controle de acesso baseado em autenticação para segurança.

✅ Validações e Formatações
As entradas de dados são validadas e formatadas para garantir maior confiabilidade do sistema.

🏗️ Arquitetura do Projeto
O projeto segue uma estrutura modular organizada e de fácil manutenção, dividida em responsabilidades:

Controller: Contém a lógica de negócio e faz a comunicação entre as outras partes do sistema.

Model: Representa as entidades do sistema, como Cliente, Conta e Transação.

Util: Abriga classes auxiliares, como validadores e formatadores de dados.

Test: Inclui os testes unitários para garantir a qualidade e o funcionamento do código.

🚀 Tecnologias Utilizadas
Java 17: É a linguagem principal usada para construir todo o projeto.

JUnit: Utilizamos este framework para criar e executar os testes unitários.

Programação Orientada a Objetos (POO): É o paradigma que guia toda a estrutura do código.

Modularização: O conceito de organização e separação de responsabilidades foi aplicado em toda a arquitetura.

📦 Como Executar o Projeto
Para executar o projeto, você vai precisar de alguns pré-requisitos, como ter o Java JDK 17 ou uma versão superior instalada. Também recomendamos o uso de uma IDE como o IntelliJ IDEA ou o Eclipse.

O processo de execução envolve clonar o repositório do projeto, compilar os arquivos de código-fonte Java e, por fim, executar a classe principal da aplicação.

🧪 Testes
O projeto possui testes unitários que foram implementados com JUnit. Para executá-los, você pode usar uma ferramenta de automação como o Maven ou rodá-los diretamente pela sua IDE.

📜 Licença
Este projeto está protegido sob a licença MIT. Para mais detalhes, sinta-se à vontade para consultar o arquivo LICENSE no repositório.

👨‍💻 Autor
Este projeto foi desenvolvido por Lucas Gonçalves Dolabela como parte da disciplina de Programação Modular na PUC Minas, durante o primeiro semestre de 2025/1.
